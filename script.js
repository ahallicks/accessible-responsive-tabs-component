"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}/**
 * Tabbed component for responsive and accessible tabs
 */var Tabs=/*#__PURE__*/function(){function a(){_classCallCheck(this,a)}return _createClass(a,[{key:"init",value:function init(){var a=this,b=document.querySelector("html");b.classList.add("js"),b.classList.remove("no-js"),this.tabbed=document.querySelectorAll(".tabbed"),this.tabbed.length&&this.tabbed.forEach(function(b){return a.setupTabs(b)}),this.hash=window.location.hash,this.popped=!1,window.onpopstate=function(b){b.state&&b.state.tab&&(a.popped=!0,document.querySelector("a[href=\""+b.state.tab+"\"]").click())}}/**
	 * Setup tabs (add aria attributes as required) to each tabbed component
	 */},{key:"setupTabs",value:function setupTabs(a){var b=this,c=a.querySelector(".tabbed-tabs"),d=c.querySelectorAll("a"),f=a.querySelectorAll(".tabbed-panel");if(c.setAttribute("role","tablist"),d.forEach(function(a,g){a.setAttribute("role","tab"),a.setAttribute("id","tab".concat(g+1)),a.setAttribute("tabindex","-1"),a.parentNode.setAttribute("role","presentation"),a.addEventListener("click",function(a){a.preventDefault();var e=c.querySelector("[aria-selected]");a.currentTarget!==e&&b.switchTab(e,a.currentTarget,d,f)},!1),a.addEventListener("keydown",function(a){// Get the index of the current tab in the tabs node list
var c=Array.prototype.indexOf.call(d,a.currentTarget),e=37===a.which?c-1:39===a.which?c+1:40===a.which?"down":null;// Work out which key the user is pressing and
// Calculate the new tab's index where appropriate
null!==e&&(a.preventDefault(),"down"===e?f[g].focus():d[e]?b.switchTab(a.currentTarget,d[e],d,f):void 0)})}),f.forEach(function(a,e){a.setAttribute("role","tabpanel"),a.setAttribute("tabindex","-1"),a.setAttribute("aria-labelledby",d[e].id),a.setAttribute("hidden",!0);var g=a.querySelector(".aria-accordion--toggle");g.addEventListener("click",function(a){var e=c.querySelector("[aria-selected]"),h=Array.prototype.indexOf.call(d,e),i=Array.prototype.indexOf.call(f,a.currentTarget.closest(".tabbed-panel"));// Hide the current tab if it's the same parent
g.setAttribute("aria-expanded",h!==i||!!f[h].getAttribute("hidden")&&"true"),h===i?f[h].getAttribute("hidden")?f[h].removeAttribute("hidden"):f[h].setAttribute("hidden",!0):b.switchTab(e,d[i],d,f)})}),d[0].removeAttribute("tabindex"),d[0].setAttribute("aria-selected","true"),f[0].removeAttribute("hidden"),""!==this.hash){var g=document.querySelector("a[href=\""+this.hash+"\"]");g&&(g.click(),window.scrollTo({top:g.getBoundingClientRect().top,left:0,behavior:"smooth"}))}}/**
	 * Tab switching function
	 */},{key:"switchTab",value:function switchTab(a,b,c,d){b.focus(),b.removeAttribute("tabindex"),b.setAttribute("aria-selected","true"),a.removeAttribute("aria-selected"),a.setAttribute("tabindex","-1");// Get the indices of the new and old tabs to find the correct
// tab panels to show and hide
var e=Array.prototype.indexOf.call(c,b),f=Array.prototype.indexOf.call(c,a);if(d[f].setAttribute("hidden",!0),d[e].removeAttribute("hidden"),!this.popped){var g=d[e].id;history.pushState({tab:"#".concat(g)},"",window.location.href.replace(window.location.hash,"")+"#".concat(g))}this.popped=!1}}]),a}(),clsTabs=new Tabs;clsTabs.init();
